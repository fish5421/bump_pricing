// Generated by CodiumAI
import { act } from 'react-dom/test-utils';

describe('SubscriptionPage', () => {

    // Test that the SubscriptionPage component successfully fetches the price and expiry date from the API and displays them
    it('should fetch price and expiry date from API and display them', async () => {
      // Mock the fetch function
      global.fetch = jest.fn().mockImplementation(() =>
        Promise.resolve({
          json: () =>
            Promise.resolve({
              price: 10,
              reserved_until: '2022-01-01T00:00:00Z',
            }),
        })
      );

      // Mock the session object
      const session = {
        user: {
          id: '123',
        },
      };

      // Render the SubscriptionPage component
      const wrapper = shallow(<SubscriptionPage session={session} />);

      // Wait for the fetchPrice function to be called
      await act(async () => {
        await flushPromises();
        wrapper.update();
      });

      // Assert that the price and expiry date are displayed correctly
      expect(wrapper.find(Typography.Title).text()).toBe('Subscription Price: $10');
      expect(wrapper.find(Countdown).prop('date')).toEqual(new Date('2022-01-01T00:00:00Z'));

      // Clean up the mock
      global.fetch.mockClear();
      delete global.fetch;
    });


});
